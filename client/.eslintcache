[{"/home/ocean/repos/cookbooks/client/src/index.js":"1","/home/ocean/repos/cookbooks/client/src/reportWebVitals.js":"2","/home/ocean/repos/cookbooks/client/src/App.js":"3","/home/ocean/repos/cookbooks/client/src/GlobalStyle.js":"4","/home/ocean/repos/cookbooks/client/src/reducers/userReducer.js":"5","/home/ocean/repos/cookbooks/client/src/components/screens/SignIn.js":"6","/home/ocean/repos/cookbooks/client/src/components/screens/SignUp.js":"7","/home/ocean/repos/cookbooks/client/src/components/screens/Home.js":"8","/home/ocean/repos/cookbooks/client/src/components/screens/Profile.js":"9","/home/ocean/repos/cookbooks/client/src/components/screens/UserProfile.js":"10","/home/ocean/repos/cookbooks/client/src/components/screens/CreatePost.js":"11","/home/ocean/repos/cookbooks/client/src/components/Nav.js":"12","/home/ocean/repos/cookbooks/client/src/components/MobileNav.js":"13","/home/ocean/repos/cookbooks/client/src/components/Post.js":"14","/home/ocean/repos/cookbooks/client/src/hooks/useWindowSize.js":"15"},{"size":500,"mtime":1612476645470,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1612476645470,"results":"18","hashOfConfig":"17"},{"size":2107,"mtime":1612476645470,"results":"19","hashOfConfig":"17"},{"size":708,"mtime":1612476645470,"results":"20","hashOfConfig":"17"},{"size":540,"mtime":1612476645470,"results":"21","hashOfConfig":"17"},{"size":3100,"mtime":1612476645470,"results":"22","hashOfConfig":"17"},{"size":3434,"mtime":1612476645470,"results":"23","hashOfConfig":"17"},{"size":1517,"mtime":1612476645470,"results":"24","hashOfConfig":"17"},{"size":3517,"mtime":1612477980050,"results":"25","hashOfConfig":"17"},{"size":6257,"mtime":1612477124360,"results":"26","hashOfConfig":"17"},{"size":3970,"mtime":1612476645470,"results":"27","hashOfConfig":"17"},{"size":5567,"mtime":1612478532220,"results":"28","hashOfConfig":"17"},{"size":1704,"mtime":1612476645470,"results":"29","hashOfConfig":"17"},{"size":8858,"mtime":1612477310710,"results":"30","hashOfConfig":"17"},{"size":1158,"mtime":1612476645470,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"exkich",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/ocean/repos/cookbooks/client/src/index.js",[],["69","70"],"/home/ocean/repos/cookbooks/client/src/reportWebVitals.js",[],"/home/ocean/repos/cookbooks/client/src/App.js",[],"/home/ocean/repos/cookbooks/client/src/GlobalStyle.js",[],"/home/ocean/repos/cookbooks/client/src/reducers/userReducer.js",[],"/home/ocean/repos/cookbooks/client/src/components/screens/SignIn.js",["71"],"import React, { useState, useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { toast } from 'react-hot-toast';\nimport { UserContext } from '../../App';\n\nconst Container = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Card = styled.div`\n  width: 544px;\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-radius: 10px;\n  box-shadow: 0px 4px 26px 0px rgba(0, 0, 0, 0.05);\n  @media only screen and (max-width: 600px) {\n    width: 90%;\n  }\n`;\n\nconst Form = styled.form`\n  width: 60%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media only screen and (max-width: 600px) {\n    width: 90%;\n  }\n  margin-top: 1rem;\n  margin-bottom: 2rem;\n`;\n\nconst Input = styled.input`\n  width: 80%;\n  background-color: #fafafa;\n  border-radius: 5px;\n  border: 1px solid lightgrey;\n  margin-bottom: 0.5rem;\n`;\n\nconst Button = styled.button`\n  width: 50%;\n  border-radius: 5px;\n  color: white;\n  font-weight: bold;\n  background: #24fe41;\n  padding: 0.5rem 1rem;\n  margin-top: 0.5rem;\n`;\n\nconst SignIn = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const history = useHistory();\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n\n  const signInUser = () => {\n    if (\n      //eslint-disable-next-line\n      !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n        email\n      )\n    ) {\n      toast.error('invalid email format');\n      return;\n    }\n    fetch('/signin', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        password,\n        email,\n      }),\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.error) {\n          toast.error(data.error);\n        } else {\n          localStorage.setItem('jwt', data.token);\n          localStorage.setItem('user', JSON.stringify(data.user));\n          dispatch({ type: 'USER', payload: data.user });\n          toast.success('Welcome back!');\n          history.push('/');\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    signInUser();\n  };\n\n  return (\n    <Container>\n      <Card>\n        <h1>Cookbooks</h1>\n        <Form onSubmit={e => onSubmit(e)}>\n          <Input\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"Email\"\n            onChange={e => setEmail(e.target.value)}\n          />\n          <Input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            onChange={e => setPassword(e.target.value)}\n          />\n          <Button type=\"submit\">Log In</Button>\n        </Form>\n        <p>\n          Don't have an account? <Link to=\"/signup\">Sign up here.</Link>\n        </p>\n      </Card>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","/home/ocean/repos/cookbooks/client/src/components/screens/SignUp.js",[],"/home/ocean/repos/cookbooks/client/src/components/screens/Home.js",["72"],"import React, { useEffect, useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport useWindowSize from '../../hooks/useWindowSize';\nimport { UserContext } from '../../App';\n\nimport Nav from '../Nav';\nimport MobileNav from '../MobileNav';\nimport Post from '../Post';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Home = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const size = useWindowSize();\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch('/feed', {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('jwt'),\n      },\n    })\n      .then(res => res.json())\n      .then(result => {\n        setData(result.posts);\n      });\n  }, [data]);\n\n  return (\n    <React.Fragment>\n      <Nav />\n      {!state && <h4 style={{marginTop: '4rem'}}>Sign in or create an account to view recipes!</h4>}\n      <Container>\n        {data.map(post => {\n          return (\n            <Post\n              post={post}\n              key={post._id}\n              postId={post._id}\n              title={post.title}\n              authorId={post.postedBy._id}\n              author={post.postedBy.name}\n              image={post.photo}\n              body={post.body}\n              likes={post.likes}\n              comments={post.comments}\n            />\n          );\n        })}\n      </Container>\n      {size.width <= 600 && <MobileNav />}\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","/home/ocean/repos/cookbooks/client/src/components/screens/Profile.js",["73"],"import React, { useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport { UserContext } from '../../App';\nimport Nav from '../Nav';\n\nconst ProfileWrapper = styled.div`\n  width: 975px;\n\n  @media only screen and (max-width: 600px) {\n    width: 100%;\n  }\n`;\n\nconst ProfileHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 1rem 0;\n  border-bottom: 1px solid lightgrey;\n\n  @media only screen and (max-width: 600px) {\n    flex-direction: column;\n  }\n`;\n\nconst ProfilePicture = styled.img`\n  height: 140px;\n  width: 140px;\n  border-radius: 99px;\n\n  @media only screen and (max-width: 600px) {\n    width: 77px;\n    height: 77px;\n  }\n`;\n\nconst ProfileInfo = styled.section`\n  display: flex;\n  flex-direction: column;\n\n  @media only screen and (max-width: 600px) {\n    align-items: center;\n  }\n`;\n\nconst ProfileStats = styled.section`\n  display: flex;\n  margin: 1rem 0;\n`;\n\nconst Gallery = styled.section`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 0.25rem;\n  justify-items: center;\n  padding-top: 0.5rem;\n`;\n\nconst Image = styled.div`\n  width: 300px;\n  height: 300px;\n  background-image: url(${props => props.image});\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n\n  :hover {\n    cursor: pointer;\n  }\n\n  @media only screen and (max-width: 600px) {\n    width: 123px;\n    height: 123px;\n  }\n`;\n\nconst Profile = () => {\n  const [mypics, setMyPics] = useState([]);\n  const { state, dispatch } = useContext(UserContext);\n\n  useEffect(() => {\n    fetch('/myposts', {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('jwt'),\n      },\n    })\n      .then(res => res.json())\n      .then(result => {\n        // console.log(result);\n        setMyPics(result.myposts);\n      });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Nav />\n      {state ? \n      <ProfileWrapper>\n        <ProfileHeader>\n          <ProfilePicture\n            src=\"https://images.unsplash.com/photo-1578173257188-2c095b0aef8b?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80\"\n            alt=\"profile-pic\"\n          />\n          <ProfileInfo>\n            <h2 style={{ fontSize: '35px', fontWeight: '500' }}>\n              {state ? state.name : 'loading'}\n            </h2>\n            <ProfileStats>\n              <div style={{ marginRight: '1rem' }}>\n                <h3 style={{ fontWeight: '400' }}>\n                  <span style={{ fontWeight: '600' }}>{mypics.length}</span>{' '}\n                  posts\n                </h3>\n              </div>\n              <div style={{ marginRight: '1rem' }}>\n                <h3 style={{ fontWeight: '400' }}>\n                  <span style={{ fontWeight: '600' }}>{state.followers > 0 ? state.followers : '0'}</span> followers\n                </h3>\n              </div>\n              <div style={{ marginRight: '1rem' }}>\n                <h3 style={{ fontWeight: '400' }}>\n                  <span style={{ fontWeight: '600' }}>{state.followers > 0 ? state.followers : '0'}</span> following\n                </h3>\n              </div>\n            </ProfileStats>\n          </ProfileInfo>\n        </ProfileHeader>\n        <Gallery>\n          {mypics.map(post => (\n            <Image image={post.photo} key={post.title}></Image>\n          ))}\n        </Gallery>\n      </ProfileWrapper>\n      :\n      <h4>Loading...</h4>\n      }\n    </React.Fragment>\n  );\n};\n\nexport default Profile;\n","/home/ocean/repos/cookbooks/client/src/components/screens/UserProfile.js",["74"],"import React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { UserContext } from \"../../App\";\nimport { useParams } from \"react-router-dom\";\nimport Nav from \"../Nav\";\n\nconst ProfileWrapper = styled.div`\n  width: 975px;\n\n  @media only screen and (max-width: 600px) {\n    width: 100%;\n  }\n`;\n\nconst ProfileHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 1rem 0;\n  border-bottom: 1px solid lightgrey;\n\n  @media only screen and (max-width: 600px) {\n    flex-direction: column;\n  }\n`;\n\nconst ProfilePicture = styled.img`\n  height: 140px;\n  width: 140px;\n  border-radius: 99px;\n\n  @media only screen and (max-width: 600px) {\n    width: 77px;\n    height: 77px;\n  }\n`;\n\nconst ProfileInfo = styled.section`\n  display: flex;\n  flex-direction: column;\n\n  @media only screen and (max-width: 600px) {\n    align-items: center;\n  }\n`;\n\nconst ProfileStats = styled.section`\n  display: flex;\n  margin: 1rem 0;\n`;\n\nconst FollowButton = styled.button `\n  background: ${props => props.following ? 'white' : '#1cbf32'};\n  color:  ${props => props.following ? '#1cbf32' : 'white'};\n  border: 2px solid #1cbf32;\n  width: 65%;\n  padding: 0.5rem 1rem;\n  font-weight: bold;\n  border-radius: 5px;\n  transition: all 0.3s ease;\n`;\n\nconst Gallery = styled.section`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 0.25rem;\n  justify-items: center;\n  padding-top: 0.5rem;\n`;\n\nconst Image = styled.div`\n  width: 300px;\n  height: 300px;\n  background-image: url(${(props) => props.image});\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n\n  :hover {\n    cursor: pointer;\n  }\n\n  @media only screen and (max-width: 600px) {\n    width: 123px;\n    height: 123px;\n  }\n`;\n\nconst UserProfile = () => {\n  const [userProfile, setProfile] = useState(null);\n\n  const { state, dispatch } = useContext(UserContext);\n  const { userId } = useParams();\n  const [showfollow,setShowFollow] = useState(state ? !state.following.includes(userId) : true)\n\n  useEffect(() => {\n    fetch(`/user/${userId}`, {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        //console.log(result)\n\n        setProfile(result);\n      });\n  }, []);\n\n  const followUser = () => {\n    fetch(\"/follow\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        followId: userId,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        dispatch({\n          type: \"UPDATE\",\n          payload: { following: data.following, followers: data.followers },\n        });\n        localStorage.setItem(\"user\", JSON.stringify(data));\n        setProfile((prevState) => {\n          return {\n            ...prevState,\n            user: {\n              ...prevState.user,\n              followers: [...prevState.user.followers, data._id],\n            },\n          };\n        });\n        setShowFollow(false);\n      });\n  };\n\n  const unfollowUser = () => {\n    fetch(\"/unfollow\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        unfollowId: userId,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        dispatch({\n          type: \"UPDATE\",\n          payload: { following: data.following, followers: data.followers },\n        });\n        localStorage.setItem(\"user\", JSON.stringify(data));\n\n        setProfile((prevState) => {\n          const newFollower = prevState.user.followers.filter(\n            (item) => item !== data._id\n          );\n          return {\n            ...prevState,\n            user: {\n              ...prevState.user,\n              followers: newFollower,\n            },\n          };\n        });\n        setShowFollow(true);\n      });\n  };\n\n  return (\n    <React.Fragment>\n      <Nav />\n      {userProfile ? (\n        <ProfileWrapper>\n          <ProfileHeader>\n            <ProfilePicture\n              src=\"https://images.unsplash.com/photo-1578173257188-2c095b0aef8b?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80\"\n              alt=\"profile-pic\"\n            />\n            <ProfileInfo>\n              <h2 style={{ fontSize: \"35px\", fontWeight: \"500\" }}>\n                {userProfile ? userProfile.user.name : \"loading\"}\n              </h2>\n              <ProfileStats>\n                <div style={{ marginRight: \"1rem\" }}>\n                  <h3 style={{ fontWeight: \"400\" }}>\n                    <span style={{ fontWeight: \"600\" }}>\n                      {userProfile.posts.length}\n                    </span>{\" \"}\n                    posts\n                  </h3>\n                </div>\n                <div style={{ marginRight: \"1rem\" }}>\n                  <h3 style={{ fontWeight: \"400\" }}>\n                    <span style={{ fontWeight: \"600\" }}>\n                      {userProfile.user.followers.length}\n                    </span>{\" \"}\n                    followers\n                  </h3>\n                </div>\n                <div style={{ marginRight: \"1rem\" }}>\n                  <h3 style={{ fontWeight: \"400\" }}>\n                    <span style={{ fontWeight: \"600\" }}>\n                      {userProfile.user.following.length}\n                    </span>{\" \"}\n                    following\n                  </h3>\n                </div>\n              </ProfileStats>\n              {!showfollow ? <FollowButton following onClick={() => unfollowUser()}>Unfollow</FollowButton> \n              : \n              <FollowButton onClick={() => followUser()}>Follow</FollowButton>\n              }\n            </ProfileInfo>\n          </ProfileHeader>\n          <Gallery>\n            {userProfile.posts.map((post) => (\n              <Image image={post.photo} key={post.title}></Image>\n            ))}\n          </Gallery>\n        </ProfileWrapper>\n      ) : (\n        <h4>Loading...</h4>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserProfile;\n","/home/ocean/repos/cookbooks/client/src/components/screens/CreatePost.js",[],"/home/ocean/repos/cookbooks/client/src/components/Nav.js",["75"],"import React, { useState, useEffect, useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { UserContext } from '../App';\nimport styled from 'styled-components';\nimport useWindowSize from '../hooks/useWindowSize';\nimport { Squash as Hamburger } from 'hamburger-react';\nimport toast from 'react-hot-toast';\n\nconst Navbar = styled.nav`\n  width: 100%;\n  box-shadow: 0px 4px 26px 0px rgba(0, 0, 0, 0.05);\n  display: flex;\n  justify-content: center;\n  padding: 0.5rem 0;\n`;\n\nconst Wrapper = styled.div`\n  width: 85%;\n  padding-top: 1.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  @media only screen and (max-width: 600px) {\n    width: 95%;\n  }\n`;\n\nconst LogoLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n`;\n\nconst Logo = styled.h2`\n  font-size: 2rem;\n  background: -webkit-linear-gradient(#fdfc47, #24fe41);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  font-family: 'Pacifico', cursive;\n  margin: 0;\n`;\n\nconst LinkList = styled.div`\n  display: flex;\n`;\n\nconst StyledLink = styled(Link)`\n  padding: ${props => (props.secondary ? '0' : '1rem')};\n  text-decoration: none;\n  color: black;\n  transition: all 0.3s ease;\n\n  :focus,\n  :hover {\n    color: #24fe41;\n  }\n  :visited,\n  :link,\n  :active {\n    text-decoration: none;\n  }\n`;\n\nconst LinkWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst OpenMenuButton = styled.div`\n  cursor: pointer;\n  border-left: 1px solid lightgrey;\n  padding-left: 1rem;\n  color: ${props => (props.isOpen ? '#24fe41' : 'black')};\n  transition: all 0.3s ease;\n`;\n\nconst MenuWrapper = styled.div`\n  width: 150px;\n  background: white;\n  box-shadow: 0px 4px 26px 0px rgba(0, 0, 0, 0.05);\n  border-radius: 10px;\n  position: absolute;\n  right: 1rem;\n  top: 5rem;\n`;\n\nconst MenuList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst MenuItem = styled.li`\n  padding: 1rem;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  color: black;\n  border-radius: ${props => props.top && '10px 10px 0 0'};\n  border-radius: ${props => props.middle && '0'};\n  border-radius: ${props => props.bottom && '0 0 10px 10px'};\n\n  :hover {\n    background: #f5f5f5;\n  }\n`;\n\nconst Nav = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const history = useHistory();\n  const size = useWindowSize();\n  //TODO: show auth links only when user isn't logged in\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    checkLogIn();\n  }, []);\n\n  const checkLogIn = () => {\n    if (localStorage.getItem('jwt')) {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n    }\n  };\n\n  const LogOut = () => {\n    localStorage.clear();\n    dispatch({ type: 'CLEAR' });\n    history.push('/signin');\n    setIsLoggedIn(false);\n    setIsMenuOpen(false);\n    toast('See you soon!', {\n      icon: '👋',\n    });\n  };\n\n  const PopoutMenu = () => {\n    return (\n      <MenuWrapper\n        onMouseEnter={() => setIsMenuOpen(true)}\n        onMouseLeave={() => setIsMenuOpen(false)}\n      >\n        <MenuList>\n          {isLoggedIn ? (\n            <React.Fragment>\n              <StyledLink to=\"/createpost\" secondary=\"true\">\n                <MenuItem top>Post a recipe</MenuItem>\n              </StyledLink>\n              <StyledLink to=\"/profile\" secondary=\"true\">\n                <MenuItem middle>View profile</MenuItem>\n              </StyledLink>\n              <MenuItem bottom onClick={() => LogOut()}>\n                Log out\n              </MenuItem>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <StyledLink to=\"/signin\" secondary=\"true\">\n                <MenuItem>Sign In</MenuItem>\n              </StyledLink>\n              <StyledLink to=\"/signup\" secondary=\"true\">\n                <MenuItem>Create an account</MenuItem>\n              </StyledLink>\n            </React.Fragment>\n          )}\n        </MenuList>\n      </MenuWrapper>\n    );\n  };\n\n  return (\n    <Navbar>\n      <Wrapper>\n        <LogoLink to=\"/\">\n          <Logo>Cookbooks</Logo>\n        </LogoLink>\n        {size.width <= 600 ? (\n          <div onClick={() => setIsMenuOpen(!isMenuOpen)}>\n            <Hamburger toggled={isOpen} toggle={setIsOpen} size={20} />\n            {isMenuOpen && <PopoutMenu />}\n          </div>\n        ) : (\n          <React.Fragment>\n            <LinkList>\n              {!isLoggedIn && (\n                <React.Fragment>\n                  <StyledLink to=\"/signin\">\n                    <h4>Sign In</h4>\n                  </StyledLink>\n                  <StyledLink to=\"/signup\">\n                    <h4>Create an account</h4>\n                  </StyledLink>\n                </React.Fragment>\n              )}\n\n              {isLoggedIn && (\n                <LinkWrapper>\n                  <StyledLink to=\"/profile\">\n                    <h4>My Profile</h4>\n                  </StyledLink>\n                  <OpenMenuButton\n                    isOpen={isMenuOpen}\n                    onClick={() => setIsMenuOpen(!isMenuOpen)}\n                  >\n                    <i className=\"fas fa-sort-down\"></i>\n                  </OpenMenuButton>\n                </LinkWrapper>\n              )}\n            </LinkList>\n            {isMenuOpen && <PopoutMenu />}\n          </React.Fragment>\n        )}\n      </Wrapper>\n    </Navbar>\n  );\n};\n\nexport default Nav;\n","/home/ocean/repos/cookbooks/client/src/components/MobileNav.js",[],"/home/ocean/repos/cookbooks/client/src/components/Post.js",["76","77"],"import React, { useState, useEffect, useContext } from 'react';\nimport { UserContext } from '../App';\nimport { useHistory, Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport toast from 'react-hot-toast';\n\nconst Card = styled.div`\n  width: 614px;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  border-radius: 10px;\n  box-shadow: 0px 4px 25px 0px rgba(0, 0, 0, 0.1);\n\n  @media only screen and (max-width: 600px) {\n    width: 100%;\n  }\n`;\n\nconst CardHeader = styled.div`\n  padding: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst HeaderInfo = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst ProfileIcon = styled.i`\n  margin-right: 1rem;\n  border: 3px solid #24fe41;\n  border-radius: 100px;\n  padding: 2px;\n  color: darkgrey;\n`;\n\nconst MenuIconButton = styled.div`\n  cursor: pointer;\n  color: ${props => (props.showMenu ? 'grey' : 'darkgrey')};\n  padding: 0 1rem;\n\n  transition: all 0.3s ease;\n`;\n\nconst StyledLink = styled(Link)`\n    text-decoration: none;\n    color: black;\n\n    &:focus, &:hover, &:visited, &:link, &:active {\n        text-decoration: none;\n    }\n`;\n\nconst MenuWrapper = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst Menu = styled.div`\n  width: 150px;\n  background: white;\n  box-shadow: 0px 4px 26px 0px rgba(0, 0, 0, 0.05);\n  border-radius: 10px;\n  position: absolute;\n  z-index: 1;\n  right: 0;\n`;\n\nconst MenuList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst MenuItem = styled.li`\n  padding: 1rem;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  font-weight: 500;\n  color: #d32f2f;\n  border-radius: 10px;\n  :hover {\n    background: #f5f5f5;\n  }\n`;\n\nconst CardContent = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CardImage = styled.img`\n  width: 614px;\n  height: 614px;\n  object-fit: cover;\n  object-position: 50% 50%;\n  \n  @media only screen and (max-width: 600px) {\n    width: 100%;\n  }\n`;\n\nconst CardBody = styled.div`\n  padding: 0.5rem 1rem 1rem 1rem;\n`;\n\nconst CardButtons = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst StarButton = styled.button`\n  display: flex;\n  align-items: center;\n`;\n\nconst StarIcon = styled.i`\n  color: ${props => (props.liked ? 'gold' : 'darkgrey')};\n  transition: all 0.3s ease;\n  :hover {\n    color: gold;\n  }\n  margin-right: 0.2rem;\n`;\n\nconst ViewRecipeButton = styled.button`\n  background: #24fe41;\n  color: white;\n  font-weight: 600;\n  padding: 0.5rem 1rem;\n  border-radius: 5px;\n`;\n\nconst CommentForm = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n`;\n\nconst CommentInput = styled.input`\n  width: 80%;\n  border-radius: 100px;\n  background-color: #fafafa;\n  margin-right: 0.5rem;\n`;\n\nconst PostCommentButton = styled.button`\n  color: #24fe41;\n  font-weight: bold;\n`;\n\nconst Post = ({\n  post,\n  postId,\n  title,\n  authorId,\n  author,\n  image,\n  body,\n  likes,\n  comments,\n}) => {\n  const { state, dispatch } = useContext(UserContext);\n  const history = useHistory();\n  const [showMenu, setShowMenu] = useState(false);\n  const [liked, setLiked] = useState(false);\n  const [commentText, setCommentText] = useState('');\n  const [commentCount, setCommentCount] = useState(0);\n\n  const [numberOfLikes, setNumberOfLikes] = useState(0);\n\n  useEffect(() => {\n    setNumberOfLikes(likes.length);\n    checkIfLiked();\n  }, [likes, commentCount]);\n\n  const checkIfLiked = () => {\n    if (state && likes.includes(state._id)) {\n      setLiked(true);\n    }\n  };\n\n  const likePost = id => {\n    setLiked(true);\n    fetch('/like', {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('jwt'),\n      },\n      body: JSON.stringify({\n        postId: id,\n      }),\n    })\n      .then(res => res.json())\n      .then(result => {\n        // console.log(result);\n        setNumberOfLikes(result.likes.length);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  const unlikePost = id => {\n    setLiked(false);\n    fetch('/unlike', {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('jwt'),\n      },\n      body: JSON.stringify({\n        postId: id,\n      }),\n    })\n      .then(res => res.json())\n      .then(result => {\n        // console.log(result);\n        setNumberOfLikes(result.likes.length);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  const makeComment = (text, postId) => {\n    fetch('/comment', {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('jwt'),\n      },\n      body: JSON.stringify({\n        postId,\n        text,\n      }),\n    })\n      .then(res => res.json())\n      .then(result => {\n        console.log(result);\n        // const newData = data.map(item => {\n        //   if (item._id == result._id) {\n        //     return result;\n        //   } else {\n        //     return item;\n        //   }\n        // });\n        // setData(newData);\n        toast.success('Comment posted')\n        setCommentCount(comments.length);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  const deletePost = postId => {\n    fetch(`/deletepost/${postId}`, {\n      method: 'delete',\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('jwt'),\n      },\n    })\n      .then(res => res.json())\n      .then(result => {\n        history.go(0);\n        toast('Recipe successfully deleted', {\n          icon: '🔪',\n        });\n      });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    makeComment(commentText, postId);\n    setCommentText('');\n  };\n\n  const PopoutMenu = () => {\n    return (\n      <Menu onMouseLeave={() => setShowMenu(!setShowMenu)}>\n        <MenuList>\n          <React.Fragment>\n            <MenuItem onClick={() => deletePost(postId)}>Delete recipe</MenuItem>\n          </React.Fragment>\n        </MenuList>\n      </Menu>\n    );\n  };\n\n  return (\n    <React.Fragment>\n    {state &&\n    <Card>\n      <CardHeader>\n        <HeaderInfo>\n          <ProfileIcon className=\"fas fa-user-circle fa-2x\"></ProfileIcon>\n          <div>\n            <h3 style={{ fontWeight: '500' }}>{title}</h3>\n            <h4><StyledLink to={authorId !== state._id ? `/profile/${authorId}` : '/profile'}>{author}</StyledLink></h4>\n          </div>\n        </HeaderInfo>\n        {state._id === authorId ? (\n          <MenuWrapper>\n            <MenuIconButton\n              showMenu={showMenu}\n              onClick={() => setShowMenu(!showMenu)}\n            >\n              <i className=\"fas fa-ellipsis-v\"></i>\n            </MenuIconButton>\n            {showMenu && <PopoutMenu />}\n          </MenuWrapper>\n        ) : null}\n      </CardHeader>\n      <CardContent>\n        <CardImage src={`${image}`} alt=\"steak\" />\n        <CardBody>\n          <CardButtons>\n            <div style={{ margin: '0.5rem 0' }}>\n              <StarButton\n                onClick={() => {\n                  liked ? unlikePost(postId) : likePost(postId);\n                }}\n              >\n                {liked ? (\n                  <StarIcon className=\"fas fa-star fa-2x\" liked={liked} />\n                ) : (\n                  <StarIcon className=\"far fa-star fa-2x\" />\n                )}\n                <span style={{ fontSize: '1rem' }}>\n                  {' '}\n                  {numberOfLikes} {numberOfLikes === 1 ? 'Star' : 'Stars'}\n                </span>\n              </StarButton>\n            </div>\n            <ViewRecipeButton>View Recipe</ViewRecipeButton>\n          </CardButtons>\n          <p>\n            <span style={{ fontWeight: '600' }}>{author}</span> {body}\n          </p>\n          <h4 style={{ color: 'grey' }}>Comments</h4>\n          {/* <p>\n            <span style={{ fontWeight: '600' }}>ocean_fuaga</span> Looks good!\n          </p>\n          <p>\n            <span style={{ fontWeight: '600' }}>gordanramsay</span> I disagree.\n          </p> */}\n          {comments.map(comment => {\n            return (\n              <p key={comment._id}>\n                <span style={{ fontWeight: '600' }}>\n                  {comment.postedBy.name}{' '}\n                </span>\n                {comment.text}\n              </p>\n            );\n          })}\n          <CommentForm onSubmit={e => handleSubmit(e)}>\n            <CommentInput\n              type=\"text\"\n              placeholder=\"Add comment...\"\n              value={commentText}\n              onChange={e => setCommentText(e.target.value)}\n            />\n            <PostCommentButton type=\"submit\">POST</PostCommentButton>\n          </CommentForm>\n        </CardBody>\n      </CardContent>\n    </Card>\n    }\n    </React.Fragment>\n  );\n};\n\nexport default Post;\n","/home/ocean/repos/cookbooks/client/src/hooks/useWindowSize.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":58,"column":11,"nodeType":"84","messageId":"85","endLine":58,"endColumn":16},{"ruleId":"82","severity":1,"message":"86","line":17,"column":18,"nodeType":"84","messageId":"85","endLine":17,"endColumn":26},{"ruleId":"82","severity":1,"message":"86","line":79,"column":18,"nodeType":"84","messageId":"85","endLine":79,"endColumn":26},{"ruleId":"87","severity":1,"message":"88","line":108,"column":6,"nodeType":"89","endLine":108,"endColumn":8,"suggestions":"90"},{"ruleId":"82","severity":1,"message":"83","line":116,"column":11,"nodeType":"84","messageId":"85","endLine":116,"endColumn":16},{"ruleId":"82","severity":1,"message":"86","line":166,"column":18,"nodeType":"84","messageId":"85","endLine":166,"endColumn":26},{"ruleId":"87","severity":1,"message":"91","line":178,"column":6,"nodeType":"89","endLine":178,"endColumn":27,"suggestions":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["95"],"React Hook useEffect has a missing dependency: 'checkIfLiked'. Either include it or remove the dependency array.",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [userId]",{"range":"101","text":"102"},"Update the dependencies array to be: [likes, commentCount, checkIfLiked]",{"range":"103","text":"104"},[2350,2352],"[userId]",[3407,3428],"[likes, commentCount, checkIfLiked]"]